#!/bin/bash
# Use gplot to plot turbulent quantities versus time in given directories to
# assess relaminarization.  Useful in conjunction with job management scripts.

declare -a state qoi bc log
for dir in "$@"; do
    if [ -d "$dir" ]; then
        qoi+=("$dir/qoi.dat")
    else
        echo Argument \"$dir\" not a directory, skipping.
    fi
done

gplot -Gg bl.visc     -y cf                    using 4:6  w l ::: "${qoi[@]}" &
gplot -Gg bl.visc     -y Bq                    using 4:10 w l ::: "${qoi[@]}" &
gplot -Gg bl.visc     -y v_wallplus            using 4:11 w l ::: "${qoi[@]}" &

gplot -Gg prod.amax   -y prod.amax   -f i=6:9  using 4:i  w l ::: "${qoi[@]}" &
gplot -Gg favre.amax  -y favre.amax  -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &
gplot -Gg reyno.amax  -y reyno.amax  -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &

gplot -Gg prod.bulk   -y prod.bulk   -f i=6:9  using 4:i  w l ::: "${qoi[@]}" &
gplot -Gg favre.bulk  -y favre.bulk  -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &
gplot -Gg reyno.bulk  -y reyno.bulk  -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &

#gplot -Gg prod.yamax  -y prod.yamax  -f i=6:9  using 4:i  w l ::: "${qoi[@]}" &
#gplot -Gg favre.yamax -y favre.yamax -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &
#gplot -Gg reyno.yamax -y reyno.yamax -f i=6:11 using 4:i  w l ::: "${qoi[@]}" &

wait
