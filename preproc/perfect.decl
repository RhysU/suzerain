// Nondimensional, Favre-averaged Navier--Stokes residual for a perfect gas.
// Follows "Sampling logistics" withing the Suzerain perfect gas write up.
//
// Unfortunately, I've been unable to find a clean way to automatically
// differentiation and so derivatives need to be explicitly declared.

// Favre-averaged specific state {
tilde_u    = bar_rho_u/bar_rho;
tilde_u__y = bar_rho_u__y/bar_rho - bar_rho_u*bar_rho__y/bar_rho**2;

tilde_v    = bar_rho_v/bar_rho;
tilde_v__y = bar_rho_v__y/bar_rho - bar_rho_v*bar_rho__y/bar_rho**2;

tilde_w    = bar_rho_w/bar_rho;
tilde_w__y = bar_rho_w__y/bar_rho - bar_rho_w*bar_rho__y/bar_rho**2;

tilde_E    = bar_rho_E/bar_rho;
tilde_E__y = bar_rho_E__y/bar_rho - bar_rho_E*bar_rho__y/bar_rho**2;
// }

// Favre-averaged Reynolds stresses {
tilde_u_u    = bar_rho_u_u/bar_rho;
tilde_u_u__y = bar_rho_u_u__y/bar_rho -bar_rho_u_u*bar_rho__y/bar_rho**2;

tilde_u_v    = bar_rho_u_v/bar_rho;
tilde_u_v__y = bar_rho_u_v__y/bar_rho -bar_rho_u_v*bar_rho__y/bar_rho**2;

tilde_u_w    = bar_rho_u_w/bar_rho;
tilde_u_w__y = bar_rho_u_w__y/bar_rho -bar_rho_u_w*bar_rho__y/bar_rho**2;

tilde_v_v    = bar_rho_v_v/bar_rho;
tilde_v_v__y = bar_rho_v_v__y/bar_rho -bar_rho_v_v*bar_rho__y/bar_rho**2;

tilde_v_w    = bar_rho_v_w/bar_rho;
tilde_v_w__y = bar_rho_v_w__y/bar_rho -bar_rho_v_w*bar_rho__y/bar_rho**2;

tilde_w_w    = bar_rho_w_w/bar_rho;
tilde_w_w__y = bar_rho_w_w__y/bar_rho -bar_rho_w_w*bar_rho__y/bar_rho**2;
// }

// Favre-fluctuating Reynolds stresses
tilde_upp_upp    = tilde_u_u - tilde_u**2;
tilde_upp_upp__y = tilde_u_u__y - 2*tilde_u*tilde_u__y;

tilde_upp_vpp    = tilde_u_v - tilde_u*tilde_v;
tilde_upp_vpp__y = tilde_u_v__y - tilde_u__y*tilde_v - tilde_u*tilde_v__y;

tilde_upp_wpp    = tilde_u_w - tilde_u*tilde_w;
tilde_upp_wpp__y = tilde_u_w__y - tilde_u__y*tilde_w - tilde_u*tilde_w__y;

tilde_vpp_vpp    = tilde_v_v - tilde_v*tilde_v;
tilde_vpp_vpp__y = tilde_v_v__y - 2*tilde_v*tilde_v__y;

tilde_vpp_wpp    = tilde_v_w - tilde_v*tilde_w;
tilde_vpp_wpp__y = tilde_v_w__y - tilde_v__y*tilde_w - tilde_v*tilde_w__y;

tilde_wpp_wpp    = tilde_w_w - tilde_w*tilde_w;
tilde_wpp_wpp__y = tilde_w_w__y - 2*tilde_w*tilde_w__y;
// }


// Favre-averaged turbulent kinetic energy, internal energy, dissipation {
tilde_k    = (tilde_upp_upp    + tilde_vpp_vpp    + tilde_wpp_wpp   ) / 2;
tilde_k__y = (tilde_upp_upp__y + tilde_vpp_vpp__y + tilde_wpp_wpp__y) / 2;

tilde_T    = (gamma*(gamma-1))*(tilde_E - Ma*Ma*(
                 (  tilde_u**2
                  + tilde_v**2
                  + tilde_w**2 ) / 2
              +  tilde_k
              ));
tilde_T__y = (gamma*(gamma-1))*(tilde_E__y - Ma*Ma*(
                 (  tilde_u*tilde_u__y
                  + tilde_v*tilde_v__y
                  + tilde_w*tilde_w__y )
              +  tilde_k__y
              ));

tilde_H    = tilde_E    + tilde_T   /gamma;
tilde_H__y = tilde_E__y + tilde_T__y/gamma;

bar_tau_colon_grad_upp = bar_tau_colon_grad_u
                       - bar_tauxy*tilde_u__y
                       - bar_tauyy*tilde_v__y
                       - bar_tauyz*tilde_w__y;

tilde_epsilon = bar_tau_colon_grad_upp/bar_rho;
// }

// Reynolds-fluctuating density-velocity correlations {
bar_rhop_up = bar_rho_u - bar_rho*bar_u;
bar_rhop_vp = bar_rho_v - bar_rho*bar_v;
bar_rhop_wp = bar_rho_w - bar_rho*bar_w;
// }

// Favre-fluctuating velocities {
bar_upp = bar_u - tilde_u;
bar_vpp = bar_v - tilde_v;
bar_wpp = bar_w - tilde_w;
// }

// Favre-fluctuating forcing work {
bar_f_dot_upp        = bar_f_dot_u
                     - bar_fx    * tilde_u
                     - bar_fy    * tilde_v
                     - bar_fz    * tilde_w;

bar_Srhou_dot_upp    = bar_Srhou_dot_u
                     - bar_Srhou * tilde_u
                     - bar_Srhov * tilde_v
                     - bar_Srhow * tilde_w;

bar_Crhou_dot_upp    = bar_Crhou_dot_u
                     - bar_Crhou * tilde_u
                     - bar_Crhov * tilde_v
                     - bar_Crhow * tilde_w;
// }


// Viscous work on the Favre-fluctuating velocity {
bar_tauuppx    = bar_tauux
               - bar_tauxx    * tilde_u
               - bar_tauxy    * tilde_v
               - bar_tauxz    * tilde_w;

bar_tauuppy    = bar_tauuy
               - bar_tauxy    * tilde_u
               - bar_tauyy    * tilde_v
               - bar_tauyz    * tilde_w;

bar_tauuppy__y = bar_tauuy__y
               - bar_tauxy__y * tilde_u - bar_tauxy    * tilde_u__y
               - bar_tauyy__y * tilde_v - bar_tauyy    * tilde_v__y
               - bar_tauyz__y * tilde_w - bar_tauyz    * tilde_w__y;

bar_tauuppz    = bar_tauuz
               - bar_tauxz    * tilde_u
               - bar_tauyz    * tilde_v
               - bar_tauzz    * tilde_w;
// }

// Fluctuating pressure/velocity-divergence correlation
bar_pp_div_upp = bar_p_div_u - bar_p*bar_v__y;

// Favre-averaged turbulent transport and its wall-normal derivative {
tilde_u_u_u    = bar_rho_u_u_u/bar_rho;
tilde_u_u_u__y = bar_rho_u_u_u__y/bar_rho
               - bar_rho_u_u_u*bar_rho__y/bar_rho**2;

tilde_u_u_v    = bar_rho_u_u_v/bar_rho;
tilde_u_u_v__y = bar_rho_u_u_v__y/bar_rho
               - bar_rho_u_u_v*bar_rho__y/bar_rho**2;

tilde_u_u_w    = bar_rho_u_u_w/bar_rho;
tilde_u_u_w__y = bar_rho_u_u_w__y/bar_rho
               - bar_rho_u_u_w*bar_rho__y/bar_rho**2;

tilde_u_v_v    = bar_rho_u_v_v/bar_rho;
tilde_u_v_v__y = bar_rho_u_v_v__y/bar_rho
               - bar_rho_u_v_v*bar_rho__y/bar_rho**2;

tilde_u_v_w    = bar_rho_u_v_w/bar_rho;
tilde_u_v_w__y = bar_rho_u_v_w__y/bar_rho
               - bar_rho_u_v_w*bar_rho__y/bar_rho**2;

tilde_u_w_w    = bar_rho_u_w_w/bar_rho;
tilde_u_w_w__y = bar_rho_u_w_w__y/bar_rho
               - bar_rho_u_w_w*bar_rho__y/bar_rho**2;

tilde_v_v_v    = bar_rho_v_v_v/bar_rho;
tilde_v_v_v__y = bar_rho_v_v_v__y/bar_rho
               - bar_rho_v_v_v*bar_rho__y/bar_rho**2;

tilde_v_v_w    = bar_rho_v_v_w/bar_rho;
tilde_v_v_w__y = bar_rho_v_v_w__y/bar_rho
               - bar_rho_v_v_w*bar_rho__y/bar_rho**2;

tilde_v_w_w    = bar_rho_v_w_w/bar_rho;
tilde_v_w_w__y = bar_rho_v_w_w__y/bar_rho
               - bar_rho_v_w_w*bar_rho__y/bar_rho**2;

tilde_w_w_w    = bar_rho_w_w_w/bar_rho;
tilde_w_w_w__y = bar_rho_w_w_w__y/bar_rho
               - bar_rho_w_w_w*bar_rho__y/bar_rho**2;

tilde_u2u    = tilde_u_u_u    + tilde_u_v_v    + tilde_u_w_w;
tilde_u2u__y = tilde_u_u_u__y + tilde_u_v_v__y + tilde_u_w_w__y;
tilde_u2v    = tilde_u_u_v    + tilde_v_v_v    + tilde_v_w_w;
tilde_u2v__y = tilde_u_u_v__y + tilde_v_v_v__y + tilde_v_w_w__y;
tilde_u2w    = tilde_u_u_w    + tilde_v_v_w    + tilde_w_w_w;
tilde_u2w__y = tilde_u_u_w__y + tilde_v_v_w__y + tilde_w_w_w__y;

tilde_upp2upp    = tilde_u2u
                 - (tilde_u_u + tilde_v_v + tilde_w_w)*tilde_u
                 - 2*(   tilde_u_u*tilde_u
                       + tilde_u_v*tilde_v
                       + tilde_u_w*tilde_w )
                 + 2*(tilde_u**2 + tilde_v**2 + tilde_w**2)*tilde_u;

tilde_upp2upp__y = tilde_u2u__y
                 - (tilde_u_u    + tilde_v_v    + tilde_w_w   )*tilde_u__y
                 - (tilde_u_u__y + tilde_v_v__y + tilde_w_w__y)*tilde_u
                 - 2*(   tilde_u_u__y * tilde_u
                       + tilde_u_u    * tilde_u__y
                       + tilde_u_v__y * tilde_v
                       + tilde_u_v    * tilde_v__y
                       + tilde_u_w__y * tilde_w
                       + tilde_u_w    * tilde_w__y )
                 + 2*(tilde_u**2    + tilde_v**2    + tilde_w**2)*tilde_u__y
                 + 4*(   tilde_u*tilde_u__y
                       + tilde_v*tilde_v__y
                       + tilde_w*tilde_w__y)*tilde_u;

tilde_upp2vpp    = tilde_u2v
                 - (tilde_u_u + tilde_v_v + tilde_w_w)*tilde_v
                 - 2*(   tilde_u_v*tilde_u
                       + tilde_v_v*tilde_v
                       + tilde_v_w*tilde_w )
                 + 2*(tilde_u**2 + tilde_v**2 + tilde_w**2)*tilde_v;

tilde_upp2vpp__y = tilde_u2v__y
                 - (tilde_u_u    + tilde_v_v    + tilde_w_w   )*tilde_v__y
                 - (tilde_u_u__y + tilde_v_v__y + tilde_w_w__y)*tilde_v
                 - 2*(   tilde_u_v__y * tilde_u
                       + tilde_u_v    * tilde_u__y
                       + tilde_v_v__y * tilde_v
                       + tilde_v_v    * tilde_v__y
                       + tilde_v_w__y * tilde_w
                       + tilde_v_w    * tilde_w__y )
                 + 2*(tilde_u**2 + tilde_v**2 + tilde_w**2)*tilde_v__y
                 + 4*(   tilde_u*tilde_u__y
                       + tilde_v*tilde_v__y
                       + tilde_w*tilde_w__y)*tilde_v;

tilde_upp2wpp    = tilde_u2w
                 - (tilde_u_u + tilde_v_v + tilde_w_w)*tilde_w
                 - 2*(   tilde_u_w*tilde_u
                       + tilde_v_w*tilde_v
                       + tilde_w_w*tilde_w )
                 + 2*(tilde_u**2 + tilde_v**2 + tilde_w**2)*tilde_w;

tilde_upp2wpp__y = tilde_u2w__y
                 - (tilde_u_u    + tilde_v_v    + tilde_w_w   )*tilde_w__y
                 - (tilde_u_u__y + tilde_v_v__y + tilde_w_w__y)*tilde_w
                 - 2*(   tilde_u_w__y * tilde_u
                       + tilde_u_w    * tilde_u__y
                       + tilde_v_w__y * tilde_v
                       + tilde_v_w    * tilde_v__y
                       + tilde_w_w__y * tilde_w
                       + tilde_w_w    * tilde_w__y )
                 + 2*(tilde_u**2 + tilde_v**2 + tilde_w**2)*tilde_w__y
                 + 4*(   tilde_u*tilde_u__y
                       + tilde_v*tilde_v__y
                       + tilde_w*tilde_w__y ) * tilde_w;

// }

// FIXME STARTHERE

tilde_T_u = bar_rho_T_u/bar_rho;
tilde_T_v = bar_rho_T_v/bar_rho;
tilde_T_w = bar_rho_T_w/bar_rho;
tilde_Tpp_upp = tilde_T_u - tilde_T*tilde_u;
tilde_Tpp_vpp = tilde_T_v - tilde_T*tilde_v;
tilde_Tpp_wpp = tilde_T_w - tilde_T*tilde_w;
tilde_mu = bar_rho_mu/bar_rho;
bar_mupp = bar_mu - tilde_mu;
tilde_nu = bar_mu/bar_rho;
bar_nupp = bar_nu - tilde_nu;
tilde_symxx_grad_u = bar_symxx_rho_grad_u/bar_rho;
tilde_symxy_grad_u = bar_symxy_rho_grad_u/bar_rho;
tilde_symxz_grad_u = bar_symxz_rho_grad_u/bar_rho;
tilde_symyy_grad_u = bar_symyy_rho_grad_u/bar_rho;
tilde_symyz_grad_u = bar_symyz_rho_grad_u/bar_rho;
tilde_symzz_grad_u = bar_symzz_rho_grad_u/bar_rho;
tilde_Sxx = tilde_symxx_grad_u
          - (tilde_symxx_grad_u + tilde_symyy_grad_u + tilde_symzz_grad_u) / 3;
tilde_Sxy = tilde_symxy_grad_u;
tilde_Sxz = tilde_symxz_grad_u;
tilde_Syy = tilde_symyy_grad_u
          - (tilde_symxx_grad_u + tilde_symyy_grad_u + tilde_symzz_grad_u) / 3;
tilde_Syz = tilde_symyz_grad_u;
tilde_Szz = tilde_symzz_grad_u
          - (tilde_symxx_grad_u + tilde_symyy_grad_u + tilde_symzz_grad_u) / 3;
tilde_nupp_Sppxx = bar_mu_Sxx/bar_rho - tilde_nu*tilde_Sxx;
tilde_nupp_Sppxy = bar_mu_Sxy/bar_rho - tilde_nu*tilde_Sxy;
tilde_nupp_Sppxz = bar_mu_Sxz/bar_rho - tilde_nu*tilde_Sxz;
tilde_nupp_Sppyy = bar_mu_Syy/bar_rho - tilde_nu*tilde_Syy;
tilde_nupp_Sppyz = bar_mu_Syz/bar_rho - tilde_nu*tilde_Syz;
tilde_nupp_Sppzz = bar_mu_Szz/bar_rho - tilde_nu*tilde_Szz;
tilde_nupp_div_upp = bar_mu_div_u/bar_rho
                   - tilde_nu*(tilde_symxx_grad_u + tilde_symyy_grad_u + tilde_symzz_grad_u);
tilde_nupp_gradxTpp = (bar_mu_gradx_T - tilde_nu*bar_rho_gradx_T)/bar_rho;
tilde_nupp_gradyTpp = (bar_mu_grady_T - tilde_nu*bar_rho_grady_T)/bar_rho;
tilde_nupp_gradzTpp = (bar_mu_gradz_T - tilde_nu*bar_rho_gradz_T)/bar_rho;

// Differentiate SAMPLED

// Differentiate DERIVED

// Computations of local quantities (see descriptions for definitions).
// This must occur after differentiation of SAMPLED and DERIVED.
// Note the following:
//
// 1)  In local_Mat computation, ".abs()" is present to avoid taking the
// square root of very small, negative tilde_k arising from negative
// tilde_{upp_upp,vpp_vpp_vpp} in laminar situations due to round off
// errors (i.e. tilde_u_u - tilde_u**2 ~= -eps).
//
// 2)  In local_Re computation, the coefficient scenario.Re arises because
// (bar_rho_u * L / bar_mu) are already nondimensional.  Multiplying by Re
// re-incorporates the reference quantities rho_0, u_0, L_0, and mu_0 to
// cause the nondimensional local_Re to be correctly formed from
// dimensional quantities.  Ditto for Re in the eddy viscosity. Ditto for
// Ma in local_Ma and local_Mat.
local_Ma  = Ma * bar_u / bar_a;
local_Mat = Ma * (std::sqrt(real_t(2))*tilde_k.abs().sqrt()) / bar_a;
local_Prt = (tilde_upp_vpp * tilde_T__y) / (tilde_Tpp_vpp * tilde_u__y);
local_nut = - Re * tilde_upp_vpp / tilde_u__y;
local_Re  = Re * bar_rho_u /* L = 1 */ / bar_mu;

// Computation of Favre-averaged density equation residual following writeup
bar_rho__t =
    // - \nabla\cdot\bar{\rho}\tilde{u}
       - bar_rho_v__y
    // + \overline{\mathscr{S}_{\rho}}
       + bar_Srho
    // + \overline{\mathscr{C}_{\rho}}
       + bar_Crho
    ;

// Computation of Favre-averaged streamwise momentum residual following writeup
bar_rho_u__t =
    // - \nabla\cdot(\tilde{u}\otimes\bar{\rho}\tilde{u})
       - tilde_v*bar_rho_u__y - bar_rho_u*tilde_v__y
    // - \frac{1}{\Mach^2}\nabla{}\bar{p}
       - 0
    // + \nabla\cdot\left( \frac{\bar{\tau}}{\Reynolds} \right)
       + bar_tauxy__y / Re
    // - \nabla\cdot\left( \bar{\rho} \widetilde{u''\otimes{}u''} \right)
       - bar_rho*tilde_upp_vpp__y - tilde_upp_vpp*bar_rho__y
    // + \bar{f}
       + bar_fx
    // + \overline{\mathscr{S}_{\rho{}u}}
       + bar_Srhou
    // + \overline{\mathscr{C}_{\rho{}u}}
       + bar_Crhou
    ;

// Computation of Favre-averaged wall-normal momentum residual following writeup
bar_rho_v__t =
    // - \nabla\cdot(\tilde{u}\otimes\bar{\rho}\tilde{u})
       - tilde_v*bar_rho_v__y - bar_rho_v*tilde_v__y
    // - \frac{1}{\Mach^2}\nabla{}\bar{p}
       - bar_p__y
    // + \nabla\cdot\left( \frac{\bar{\tau}}{\Reynolds} \right)
       + bar_tauyy__y / Re
    // - \nabla\cdot\left( \bar{\rho} \widetilde{u''\otimes{}u''} \right)
       - bar_rho*tilde_vpp_vpp__y - tilde_vpp_vpp*bar_rho__y
    // + \bar{f}
       + bar_fy
    // + \overline{\mathscr{S}_{\rho{}u}}
       + bar_Srhov
    // + \overline{\mathscr{C}_{\rho{}u}}
       + bar_Crhov
    ;

// Computation of Favre-averaged spanwise momentum residual following writeup
bar_rho_w__t =
    // - \nabla\cdot(\tilde{u}\otimes\bar{\rho}\tilde{u})
       - tilde_v*bar_rho_w__y - bar_rho_w*tilde_v__y
    // - \frac{1}{\Mach^2}\nabla{}\bar{p}
       - 0
    // + \nabla\cdot\left( \frac{\bar{\tau}}{\Reynolds} \right)
       + bar_tauyz__y / Re
    // - \nabla\cdot\left( \bar{\rho} \widetilde{u''\otimes{}u''} \right)
       - bar_rho*tilde_vpp_wpp__y - tilde_vpp_wpp*bar_rho__y
    // + \bar{f}
       + bar_fz
    // + \overline{\mathscr{S}_{\rho{}u}}
       + bar_Srhow
    // + \overline{\mathscr{C}_{\rho{}u}}
       + bar_Crhow
    ;

// Computation of Favre-averaged total energy residual following writeup
bar_rho_E__t =
    // - \nabla\cdot\bar{\rho}\tilde{H}\tilde{u}
       - bar_rho_v*tilde_H__y - tilde_H*bar_rho_v__y
    // + \Mach^{2} \nabla\cdot\left( \frac{\bar{\tau}}{\Reynolds} \right) \tilde{u}
       + (Ma*Ma/Re)*( tilde_u*bar_tauxy__y + bar_tauxy*tilde_u__y
                    + tilde_v*bar_tauyy__y + bar_tauyy*tilde_v__y
                    + tilde_w*bar_tauyz__y + bar_tauyz*tilde_w__y )
    // - \Mach^{2} \nabla\cdot\left( \bar{\rho} \widetilde{u''\otimes{}u''} \right) \tilde{u}
       - (Ma*Ma)*( bar_rho_u*tilde_upp_vpp__y + tilde_upp_vpp*bar_rho_u__y
                 + bar_rho_v*tilde_vpp_vpp__y + tilde_vpp_vpp*bar_rho_v__y
                 + bar_rho_w*tilde_vpp_wpp__y + tilde_vpp_wpp*bar_rho_w__y )
    // - \frac{1}{2}\Mach^{2} \nabla\cdot\left( \bar{\rho}\widetilde{{u''}^{2}u''} \right)
       - (Ma*Ma/2)*( bar_rho*tilde_upp2vpp__y + tilde_upp2vpp*bar_rho__y )
    // + \Mach^{2} \nabla\cdot\left( \frac{\overline{\tau{}u''}}{\Reynolds} \right)
       + (Ma*Ma/Re)*( bar_tauuppy__y )
    // + \frac{1}{\gamma-1} \nabla\cdot\left(
    //     \frac{ \bar{\mu} \widetilde{\nabla{}T} }{\Reynolds\Prandtl}
    //   \right)
       + (
            tilde_nu*bar_rho_grady_T__y + bar_rho_grady_T*tilde_nu__y
         ) / ((gamma-1)*Re*Pr)
    // + \frac{1}{\gamma-1} \nabla\cdot\left(
    //     \frac{ \bar{\rho} \widetilde{\nu'' \left(\nabla{}T\right)''} }{\Reynolds\Prandtl}
    //   \right)
       + (
            bar_rho*tilde_nupp_gradyTpp + tilde_nupp_gradyTpp*bar_rho__y
         ) / ((gamma-1)*Re*Pr)
    // - \frac{1}{\gamma-1} \nabla\cdot\left( \bar{\rho} \widetilde{T''u''} \right)
       - (
            bar_rho*tilde_Tpp_vpp__y + tilde_Tpp_vpp*bar_rho__y
         ) / (gamma-1)
    // + \Mach^{2} \bar{f}\cdot\tilde{u}
       + Ma*Ma*(bar_fx*tilde_u + bar_fy*tilde_v + bar_fz*tilde_w)
    // + \Mach^{2} \overline{f\cdot{}u''}
       + Ma*Ma*bar_f_dot_upp
    // + \bar{q}_b
       + bar_qb
    // + \overline{\mathscr{S}_{\rho{}E}}
       + bar_SrhoE
    // + \overline{\mathscr{C}_{\rho{}E}}
       + bar_CrhoE
        ;

// Computation of Favre-averaged turbulent kinetic energy residual following writeup
bar_rho_k__t =
    // - \nabla\cdot\bar{\rho}k\tilde{u}
       - bar_rho_v*tilde_k__y - tilde_k*bar_rho_v__y
    // - \bar{\rho} \widetilde{u''\otimes{}u''} : \nabla\tilde{u}
       - bar_rho*( tilde_upp_vpp*tilde_u__y
                    + tilde_vpp_vpp*tilde_v__y
                    + tilde_vpp_wpp*tilde_w__y )
    // - \frac{\bar{\rho} \epsilon}{\Reynolds}
       - bar_rho*tilde_epsilon / Re
    // - \frac{1}{2}\nabla\cdot\left( \bar{\rho} \widetilde{{u''}^{2}u''} \right)
       - bar_rho*tilde_upp2vpp__y/2 - tilde_upp2vpp*bar_rho__y/2
    // + \nabla\cdot\left( \frac{\overline{\tau{}u''}}{\Reynolds} \right)
       + bar_tauuppy__y/Re
    // + \frac{1}{\Mach^2} \left(
    //       \bar{p}\nabla\cdot\overline{u''}
    //     + \overline{p' \nabla\cdot{}u''}
    //     - \frac{1}{\gamma} \nabla\cdot\bar{\rho} \widetilde{T''u''}
    //   \right)
       + 1/(Ma*Ma)*( bar_p*bar_vpp__y
                   + bar_pp_div_upp
                   - bar_rho*tilde_Tpp_vpp__y/gamma
                   - tilde_Tpp_vpp*bar_rho__y/gamma )
    // + \overline{f\cdot{}u''}
       + bar_f_dot_upp
    // + \overline{\mathscr{S}_{\rho{}u}\cdot{}upp}
       + bar_Srhou_dot_upp
    // + \overline{\mathscr{C}_{\rho{}u}\cdot{}upp}
       + bar_Crhou_dot_upp
        ;
